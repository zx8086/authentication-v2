{
  "name": "authentication-service",
  "version": "1.0.0",
  "type": "module",
  "description": "PVH Authentication Service",
  "main": "dist/server.js",
  "scripts": {
    "dev": "bun run generate-docs && bun src/server.ts",
    "start": "bun run src/server.ts",
    "build": "bun run generate-docs && bun build src/server.ts --target=bun --outdir=dist --minify",
    "test": "bun test",
    "test:watch": "bun test --watch",
    "test:coverage": "bun test --coverage",
    "typecheck": "tsc --noEmit",
    "lint": "biome lint .",
    "lint:fix": "biome lint --write .",
    "format": "biome format .",
    "format:write": "biome format --write .",
    "check": "biome check .",
    "check:write": "biome check --write .",
    "check:unsafe": "biome check --write --unsafe .",
    "ci": "biome ci .",
    "generate-docs": "bun scripts/generate-openapi.ts",
    "generate-docs:json": "bun scripts/generate-openapi.ts --format json",
    "generate-docs:yaml": "bun scripts/generate-openapi.ts --format yaml",
    "generate-docs:verbose": "bun scripts/generate-openapi.ts --verbose",
    "health-check": "curl -f http://localhost:3000/health || exit 1",
    "kill-server": "lsof -ti :3000 | xargs kill -9 2>/dev/null || echo 'No processes found on port 3000'",
    "dev:clean": "bun run kill-server && bun run dev",
    "docker:build": "docker build -t simple-api-service .",
    "playwright:test": "playwright test",
    "playwright:ui": "playwright test --ui",
    "test:clean": "rm -rf test/results/k6/* test/results/playwright/* test/results/bun/* test-results/ playwright-report/",
    "k6:smoke:health": "mkdir -p test/results/k6 && k6 run --out json=test/results/k6/smoke-health-results.json test/k6/smoke/health-smoke.ts",
    "k6:smoke:tokens": "mkdir -p test/results/k6 && k6 run --out json=test/results/k6/smoke-tokens-results.json test/k6/smoke/tokens-smoke.ts",
    "k6:load": "mkdir -p test/results/k6 && k6 run --out json=test/results/k6/load-auth-results.json test/k6/load/auth-load.ts",
    "k6:stress": "mkdir -p test/results/k6 && k6 run --out json=test/results/k6/stress-system-results.json test/k6/stress/system-stress.ts",
    "k6:spike": "mkdir -p test/results/k6 && k6 run --out json=test/results/k6/spike-test-results.json test/k6/spike/spike-test.ts",
    "k6:info": "bun run test/k6/run-all-tests.ts"
  },
  "keywords": [
    "authentication",
    "jwt",
    "kong",
    "bun",
    "typescript",
    "microservice"
  ],
  "author": "PVH Corp",
  "license": "UNLICENSED",
  "devDependencies": {
    "@biomejs/biome": "^2.2.4",
    "@playwright/test": "^1.48.0",
    "@types/bun": "1.2.22",
    "typescript": "^5.3.3"
  },
  "engines": {
    "bun": ">=1.1.35"
  },
  "bun": {
    "install": {
      "peer": true,
      "frozenLockfile": true
    },
    "build": {
      "target": "bun",
      "minify": true,
      "sourcemap": "external"
    }
  },
  "dependencies": {
    "@elastic/ecs-winston-format": "^1.5.3",
    "@opentelemetry/api": "^1.0.0",
    "@opentelemetry/api-logs": "^0.205.0",
    "@opentelemetry/auto-instrumentations-node": "^0.64.1",
    "@opentelemetry/core": "^2.1.0",
    "@opentelemetry/exporter-logs-otlp-http": "^0.205.0",
    "@opentelemetry/exporter-metrics-otlp-http": "^0.205.0",
    "@opentelemetry/exporter-otlp-http": "^0.26.0",
    "@opentelemetry/exporter-trace-otlp-http": "^0.205.0",
    "@opentelemetry/host-metrics": "^0.36.0",
    "@opentelemetry/instrumentation-fetch": "^0.205.0",
    "@opentelemetry/instrumentation-http": "^0.205.0",
    "@opentelemetry/instrumentation-winston": "^0.50.0",
    "@opentelemetry/resources": "^2.1.0",
    "@opentelemetry/sdk-logs": "^0.205.0",
    "@opentelemetry/sdk-metrics": "^2.1.0",
    "@opentelemetry/sdk-node": "^0.205.0",
    "@opentelemetry/sdk-trace-base": "^2.1.0",
    "@opentelemetry/semantic-conventions": "^1.0.0",
    "@opentelemetry/winston-transport": "^0.16.0",
    "@types/k6": "^1.2.0",
    "k6": "^0.0.0",
    "winston": "^3.17.0",
    "winston-transport": "^4.9.0",
    "zod": "^4.1.8"
  }
}
