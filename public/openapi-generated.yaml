# OpenAPI 3.1.1 specification for Authentication Service
# Generated on: 2025-10-14T00:28:34.959Z
# This file is auto-generated. Do not edit manually.
# Compliant with JSON Schema Draft 2020-12


components:
  parameters:
    AnonymousConsumerHeader:
      required: false
      description: Indicates if the request is from an anonymous consumer
      in: header
      name: x-anonymous-consumer
      schema:
        type: string
        enum: ["true", "false"]
        example: "false"
    ConsumerIdHeader:
      required: true
      description: Kong consumer ID
      in: header
      name: x-consumer-id
      schema:
        type: string
        example: demo_user
    ConsumerUsernameHeader:
      required: true
      description: Kong consumer username
      in: header
      name: x-consumer-username
      schema:
        type: string
        example: demo_user
  schemas:
    DebugResponse:
      type: object
      required: [timestamp, message, success]
      properties:
        details:
          type: object
          description: Additional operation details
          additionalProperties: true
        message:
          type: string
          description: Operation result message
          example: Test metrics recorded successfully
        success:
          type: boolean
          description: Operation success status
          example: true
        timestamp:
          type: string
          description: Operation timestamp
          example: "2025-10-14T00:28:34.955Z"
          format: date-time
      description: Debug operation response
    ErrorResponse:
      type: object
      required: [error, message, statusCode, timestamp]
      properties:
        details:
          type: object
          description: Additional error context
          additionalProperties: true
        error:
          type: string
          description: Error type or code
          example: VALIDATION_ERROR
        message:
          type: string
          description: Human-readable error message
          example: Missing required Kong consumer headers
        requestId:
          type: string
          description: Unique request identifier for tracing
          example: 550e8400-e29b-41d4-a716-446655440000
          format: uuid
        statusCode:
          type: integer
          description: HTTP status code
          example: 400
          maximum: 599
          minimum: 400
        timestamp:
          type: string
          description: Error occurrence timestamp
          example: "2025-10-14T00:28:34.955Z"
          format: date-time
      description: Standard error response format
    HealthResponse:
      type: object
      required: 
        - status
        - timestamp
        - version
        - uptime
        - environment
        - dependencies
      properties:
        dependencies:
          type: object
          properties:
            kong:
              type: object
              required: [status, response_time, url]
              properties:
                response_time:
                  type: integer
                  description: Kong response time in milliseconds
                  example: 45
                  minimum: 0
                status:
                  type: string
                  description: Kong Admin API status
                  enum: [healthy, unhealthy]
                  example: healthy
                url:
                  type: string
                  description: Kong Admin API URL
                  example: "https://kong-admin.example.com"
                  format: uri
        environment:
          type: string
          description: Deployment environment
          example: local
        status:
          type: string
          description: Overall system health status
          enum: [healthy, degraded, unhealthy]
          example: healthy
        timestamp:
          type: string
          description: Health check timestamp
          example: "2025-10-14T00:28:34.956Z"
          format: date-time
        uptime:
          type: integer
          description: Service uptime in seconds
          example: 3600
          minimum: 0
        version:
          type: string
          description: Service version
          example: 2.4.0
      description: System health status with dependency information
    MetricsHealth:
      type: object
      required: [timestamp, telemetry, metrics, export_statistics]
      properties:
        export_statistics:
          type: object
          properties:
            failureCount:
              type: integer
              description: Number of failed exports
              example: 2
              minimum: 0
            lastExportTime:
              type: string
              description: Last successful export timestamp
              example: "2025-10-14T00:28:19.956Z"
              format: date-time
            successCount:
              type: integer
              description: Number of successful exports
              example: 143
              minimum: 0
            successRate:
              type: number
              description: Export success rate percentage
              example: 98.62
              maximum: 100
              minimum: 0
            totalExports:
              type: integer
              description: Total number of metric exports
              example: 145
              minimum: 0
        metrics:
          type: object
          properties:
            total_instruments:
              type: integer
              description: Total number of metric instruments
              example: 23
              minimum: 0
        telemetry:
          $ref: "#/components/schemas/TelemetryStatus"
        timestamp:
          type: string
          description: Metrics health check timestamp
          example: "2025-10-14T00:28:34.956Z"
          format: date-time
      description: Comprehensive metrics system health information
    MetricsStats:
      type: object
      required: [timestamp, message, export_statistics, metrics_status]
      properties:
        export_statistics:
          type: object
          properties:
            failureCount:
              type: integer
              description: Number of failed exports
              example: 2
              minimum: 0
            lastExportTime:
              type: string
              description: Last successful export timestamp
              example: "2025-10-14T00:28:19.956Z"
              format: date-time
            successCount:
              type: integer
              description: Number of successful exports
              example: 143
              minimum: 0
            successRate:
              type: number
              description: Export success rate percentage
              example: 98.62
              maximum: 100
              minimum: 0
            totalExports:
              type: integer
              description: Total number of metric exports
              example: 145
              minimum: 0
        message:
          type: string
          description: Status message
          example: Metrics statistics retrieved successfully
        metrics_status:
          type: object
          properties:
            total_instruments:
              type: integer
              description: Total number of metric instruments
              example: 23
              minimum: 0
        timestamp:
          type: string
          description: Statistics retrieval timestamp
          example: "2025-10-14T00:28:34.956Z"
          format: date-time
      description: Detailed metrics export statistics and status
    PerformanceMetrics:
      type: object
      required: [timestamp, uptime, metrics]
      properties:
        metrics:
          type: object
          properties:
            requests:
              type: object
              properties:
                rate:
                  type: number
                  description: Requests per second
                  example: 4.28
                  minimum: 0
                total:
                  type: integer
                  description: Total requests processed
                  example: 15420
                  minimum: 0
            response_time:
              type: object
              properties:
                avg:
                  type: number
                  description: Average response time in milliseconds
                  example: 12.5
                  minimum: 0
                p95:
                  type: number
                  description: 95th percentile response time in milliseconds
                  example: 45.2
                  minimum: 0
        timestamp:
          type: string
          description: Metrics collection timestamp
          example: "2025-10-14T00:28:34.956Z"
          format: date-time
        uptime:
          type: integer
          description: Service uptime in seconds
          example: 3600
          minimum: 0
      description: Service performance metrics and statistics
    TelemetryStatus:
      type: object
      required: [initialized, config]
      properties:
        config:
          type: object
          properties:
            environment:
              type: string
              description: Deployment environment
              enum: [local, development, staging, production]
              example: local
            logsEndpoint:
              type: string
              description: OTLP logs endpoint
              example: "https://otel-http.example.com/v1/logs"
              format: uri
            metricsEndpoint:
              type: string
              description: OTLP metrics endpoint
              example: "https://otel-http.example.com/v1/metrics"
              format: uri
            mode:
              type: string
              description: Telemetry output mode
              enum: [console, otlp, both]
              example: both
            serviceName:
              type: string
              description: OpenTelemetry service name
              example: authentication-service
            serviceVersion:
              type: string
              description: Service version for telemetry
              example: 2.4.0
            tracesEndpoint:
              type: string
              description: OTLP traces endpoint
              example: "https://otel-http.example.com/v1/traces"
              format: uri
        initialized:
          type: boolean
          description: Whether OpenTelemetry is initialized
          example: true
      description: OpenTelemetry configuration and status
    TokenResponse:
      type: object
      required: [access_token, expires_in]
      properties:
        access_token:
          type: string
          description: JWT access token
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJkZW1vX3VzZXIiLCJleHAiOjE3NjA0MDI2MTQsImlhdCI6MTc2MDQwMTcxNCwiaXNzIjoiaHR0cHM6Ly9hcGkucHZoY29ycC5jb20iLCJhdWQiOiJwdmgtYXBpIiwia2V5IjoiZ2VuZXJhdGVkLWtleSJ9.signature
        expires_in:
          type: integer
          description: Token expiration time in seconds
          example: 900
          minimum: 1
      description: JWT token response
  securitySchemes:
    KongAdminToken:
      type: apiKey
      description: Kong Admin API authentication token
      in: header
      name: Kong-Admin-Token
info:
  description: High-performance JWT authentication service built with Bun
  contact:
    email: simonowusu@pvh.com
    name: Simon Owusu
  license:
    identifier: UNLICENSED
    name: Proprietary
  title: authentication-service
  version: 2.4.0
jsonSchemaDialect: "https://json-schema.org/draft/2020-12/schema"
openapi: 3.1.1
paths:
  /:
    get:
      description: Returns the OpenAPI 3.0.3 specification in JSON or YAML format
      operationId: get
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                description: OpenAPI 3.0.3 specification object
            application/yaml:
              schema:
                type: string
                description: OpenAPI 3.0.3 specification in YAML format
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      summary: Get Open A P I Spec
      tags: [Documentation]
  /debug/metrics/export:
    post:
      description: Trigger immediate metrics export to OTLP endpoint
      operationId: createDebugMetricsExport
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DebugResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      summary: Force Metrics Export
      tags: [Debug, Metrics]
  /debug/metrics/stats:
    get:
      description: Get detailed metrics export statistics and timing information
      operationId: getDebugMetricsStats
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MetricsStats"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      summary: Get Export Stats
      tags: [Debug, Metrics]
  /debug/metrics/test:
    post:
      description: Manually record test metrics for debugging purposes
      operationId: createDebugMetricsTest
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DebugResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      summary: Record Test Metrics
      tags: [Debug, Metrics]
  /health:
    get:
      description: Get comprehensive system health status including dependency checks
      operationId: getHealth
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HealthResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      summary: Health Check
      tags: [Health]
  /health/metrics:
    get:
      description: Get metrics system health including export statistics
      operationId: getHealthMetrics
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MetricsHealth"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      summary: Get Metrics Health
      tags: [Health, Metrics]
  /health/telemetry:
    get:
      description: Get OpenTelemetry configuration and initialization status
      operationId: getHealthTelemetry
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TelemetryStatus"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      summary: Get Telemetry Health
      tags: [Health]
  /metrics:
    get:
      description: Get service performance metrics and operational statistics
      operationId: getMetrics
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PerformanceMetrics"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      summary: Get Metrics
      tags: [Metrics]
  /tokens:
    get:
      description: Generate JWT access token for authenticated Kong consumers
      operationId: getTokens
      parameters: 
        -
           required: true
          description: Kong consumer ID
          in: header
          name: x-consumer-id
          schema:
            type: string
            example: demo_user
        -
           required: true
          description: Kong consumer username
          in: header
          name: x-consumer-username
          schema:
            type: string
            example: demo_user
        -
           required: false
          description: Indicates if the request is from an anonymous consumer (must not be 'true' for token issuance)
          in: header
          name: x-anonymous-consumer
          schema:
            type: string
            enum: ["true", "false"]
            example: "false"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TokenResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Unauthorized - Missing or invalid Kong consumer headers
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden - Anonymous consumers are not allowed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "429":
          description: Rate limit exceeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      summary: Issue Token
      tags: [Authentication]
security: 
  -
     KongAdminToken: []
servers: 
  -
     description: Local development server (current)
    environment: local
    url: "http://localhost:3000"
  -
     description: Development server
    environment: development
    url: "http://localhost:3000"
  -
     description: Staging server
    environment: staging
    url: "https://auth-staging.example.com"
  -
     description: Production server
    environment: production
    url: "https://auth.example.com"
tags: 
  -
     description: API documentation and specification endpoints
    name: Documentation
  -
     description: JWT token issuance and authentication operations
    name: Authentication
  -
     description: System health and dependency status monitoring
    name: Health
  -
     description: Performance metrics and operational statistics
    name: Metrics
  -
     description: Debug endpoints for development and troubleshooting
    name: Debug