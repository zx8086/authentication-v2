services:
  auth-service:
    build:
      context: .
      target: production
      cache_from:
        - authentication-service:cache
      args:
        - BUILD_DATE=${BUILD_DATE}
        - VCS_REF=${VCS_REF}

    # Security hardening
    user: "1001:1001"
    read_only: true
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID

    # Resource limits
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.50'
        reservations:
          memory: 256M
          cpus: '0.25'

    # Health monitoring
    healthcheck:
      test: ["CMD", "curl", "-f", "-H", "User-Agent: Docker-Health-Check", "http://localhost:3000/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 40s

    # Environment configuration (coordinate with config-reviewer)
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - PORT=${PORT:-3000}
      - HOST=0.0.0.0
      - TELEMETRY_MODE=${TELEMETRY_MODE:-otlp}
      # Kong configuration
      - KONG_JWT_AUTHORITY=${KONG_JWT_AUTHORITY}
      - KONG_JWT_AUDIENCE=${KONG_JWT_AUDIENCE}
      - KONG_JWT_KEY_CLAIM_NAME=${KONG_JWT_KEY_CLAIM_NAME:-key}
      - JWT_EXPIRATION_MINUTES=${JWT_EXPIRATION_MINUTES:-15}
      - KONG_MODE=${KONG_MODE:-API_GATEWAY}
      - KONG_ADMIN_URL=${KONG_ADMIN_URL}
      - KONG_ADMIN_TOKEN=${KONG_ADMIN_TOKEN}
      # OpenTelemetry configuration
      - OTEL_SERVICE_NAME=${OTEL_SERVICE_NAME:-authentication-service}
      - OTEL_SERVICE_VERSION=${OTEL_SERVICE_VERSION:-1.0.0}
      - OTEL_EXPORTER_OTLP_ENDPOINT=${OTEL_EXPORTER_OTLP_ENDPOINT}
      - OTEL_EXPORTER_OTLP_TRACES_ENDPOINT=${OTEL_EXPORTER_OTLP_TRACES_ENDPOINT}
      - OTEL_EXPORTER_OTLP_METRICS_ENDPOINT=${OTEL_EXPORTER_OTLP_METRICS_ENDPOINT}
      - OTEL_EXPORTER_OTLP_LOGS_ENDPOINT=${OTEL_EXPORTER_OTLP_LOGS_ENDPOINT}

    # Port mapping
    ports:
      - "${HOST_PORT:-3000}:3000"

    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

    # Network security
    networks:
      - auth-network

    # Volume security
    tmpfs:
      - /tmp:noexec,nosuid,size=100m

    # Restart policy
    restart: unless-stopped

  # Optional: Kong for local development
  kong:
    image: kong:3.4-alpine
    profiles:
      - local-dev
    environment:
      - KONG_DATABASE=off
      - KONG_DECLARATIVE_CONFIG=/kong/declarative/kong.yml
      - KONG_PROXY_ACCESS_LOG=/dev/stdout
      - KONG_ADMIN_ACCESS_LOG=/dev/stdout
      - KONG_PROXY_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_LISTEN=0.0.0.0:8001
    volumes:
      - ./test/kong/kong.yml:/kong/declarative/kong.yml:ro
    ports:
      - "8000:8000"
      - "8001:8001"
    networks:
      - auth-network
    depends_on:
      auth-service:
        condition: service_healthy

networks:
  auth-network:
    driver: bridge
    internal: false