# Docker Compose for local development and testing
version: '3.8'

services:
  # Authentication service
  auth-service:
    build:
      context: .
      target: development
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - JWT_AUTHORITY=https://api.pvhcorp.com
      - JWT_AUDIENCE=pvh-api
      - JWT_KEY_CLAIM_NAME=key
      - KONG_ADMIN_URL=http://kong:8001
      - KONG_ADMIN_TOKEN=test-admin-token
      - API_CORS=http://localhost:3000,https://app.example.com
      - RATE_LIMIT_WINDOW_MS=900000
      - RATE_LIMIT_MAX_REQUESTS=100
    volumes:
      - ./src:/app/src:ro
      - ./tests:/app/tests:ro
    depends_on:
      - kong-database
      - kong
    networks:
      - auth-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Kong API Gateway
  kong:
    image: kong/kong-gateway:3.4
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_DATABASE: kong
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kongpass
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_ADMIN_GUI_URL: http://localhost:8002
    ports:
      - "8000:8000" # Proxy port
      - "8001:8001" # Admin API port
      - "8002:8002" # Admin GUI port
    depends_on:
      - kong-database
    networks:
      - auth-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Kong Database
  kong-database:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: kong
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: kongpass
    volumes:
      - kong_data:/var/lib/postgresql/data
    networks:
      - auth-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kong"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Kong Database Migration (run once)
  kong-migration:
    image: kong/kong-gateway:3.4
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_DATABASE: kong
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kongpass
    command: ["kong", "migrations", "bootstrap"]
    depends_on:
      - kong-database
    networks:
      - auth-network
    restart: "no"

  # Load testing with K6 (optional)
  k6:
    image: grafana/k6:latest
    volumes:
      - ./tests/load:/scripts:ro
    environment:
      - K6_AUTH_SERVICE_URL=http://auth-service:3000
    networks:
      - auth-network
    profiles:
      - load-test

volumes:
  kong_data:

networks:
  auth-network:
    driver: bridge