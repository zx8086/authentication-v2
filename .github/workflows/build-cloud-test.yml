# Docker Cloud Builders Test Workflow
# Testing Docker Cloud Builders integration for enhanced CI/CD performance

name: Docker Cloud Builders Test

on:
  pull_request:
    branches:
      - master
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  REGISTRY: docker.io
  IMAGE_NAME: zx8086/authentication-v2

jobs:
  docker-cloud-test:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: read
      packages: write
      security-events: write
      id-token: write
      attestations: write

    outputs:
      image-digest: ${{ steps.build.outputs.digest }}
      image-uri: ${{ steps.build.outputs.imageuri }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        timeout-minutes: 1

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        timeout-minutes: 2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx (Cloud)
        uses: docker/setup-buildx-action@v3
        timeout-minutes: 3
        with:
          driver: cloud
          endpoint: "zx8086/cldbuild"

      - name: Extract package.json metadata
        id: package
        run: |
          SERVICE_NAME=$(grep '"name"' package.json | head -1 | cut -d'"' -f4)
          SERVICE_VERSION=$(grep '"version"' package.json | head -1 | cut -d'"' -f4)
          SERVICE_DESCRIPTION=$(grep '"description"' package.json | head -1 | cut -d'"' -f4)
          SERVICE_AUTHOR=$(grep '"author"' package.json | head -1 | cut -d'"' -f4)
          SERVICE_LICENSE=$(grep '"license"' package.json | head -1 | cut -d'"' -f4)

          echo "service-name=$SERVICE_NAME" >> $GITHUB_OUTPUT
          echo "service-version=$SERVICE_VERSION" >> $GITHUB_OUTPUT
          echo "service-description=$SERVICE_DESCRIPTION" >> $GITHUB_OUTPUT
          echo "service-author=$SERVICE_AUTHOR" >> $GITHUB_OUTPUT
          echo "service-license=$SERVICE_LICENSE" >> $GITHUB_OUTPUT

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        timeout-minutes: 2
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch,suffix=-cloud-test
            type=ref,event=pr,suffix=-cloud-test
            type=raw,value=cloud-test-${{ github.run_number }}
          labels: |
            org.opencontainers.image.title=${{ steps.package.outputs.service-name }}
            org.opencontainers.image.description=${{ steps.package.outputs.service-description }}
            org.opencontainers.image.vendor=${{ steps.package.outputs.service-author }}
            org.opencontainers.image.licenses=${{ steps.package.outputs.service-license }}
            org.opencontainers.image.version=${{ steps.package.outputs.service-version }}
            org.opencontainers.image.source=${{ github.repositoryUrl }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Build test image (Single Platform)
        id: build
        uses: docker/build-push-action@v6
        timeout-minutes: 8
        with:
          context: .
          platforms: linux/amd64
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          outputs: type=cacheonly
          build-args: |
            BUILD_DATE=${{ github.event.head_commit.timestamp }}
            VCS_REF=${{ github.sha }}
            VERSION=${{ steps.meta.outputs.version || github.ref_name }}
            SERVICE_NAME=${{ steps.package.outputs.service-name }}
            SERVICE_VERSION=${{ steps.package.outputs.service-version }}
            SERVICE_DESCRIPTION=${{ steps.package.outputs.service-description }}
            SERVICE_AUTHOR=${{ steps.package.outputs.service-author }}
            SERVICE_LICENSE=${{ steps.package.outputs.service-license }}

      - name: Cloud Builders Test Summary
        run: |
          echo "## Docker Cloud Builders Test Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Test Configuration:**" >> $GITHUB_STEP_SUMMARY
          echo "- Cloud Builder Endpoint: \`zx8086/cldbuild\`" >> $GITHUB_STEP_SUMMARY
          echo "- Platform: \`linux/amd64\` (single platform test)" >> $GITHUB_STEP_SUMMARY
          echo "- Output: \`type=cacheonly\` (no registry push)" >> $GITHUB_STEP_SUMMARY
          echo "- Build Time: \`${{ steps.build.outputs.build-time || 'N/A' }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Status:** âœ… Single platform build completed successfully" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Next Steps:**" >> $GITHUB_STEP_SUMMARY
          echo "- Test multi-platform builds (linux/amd64,linux/arm64)" >> $GITHUB_STEP_SUMMARY
          echo "- Add security scanning integration" >> $GITHUB_STEP_SUMMARY
          echo "- Compare performance vs standard builds" >> $GITHUB_STEP_SUMMARY